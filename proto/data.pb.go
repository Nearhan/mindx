// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/data.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DataPoint struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id                   int32                `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Confidence           float32              `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	NormPosX             float32              `protobuf:"fixed32,4,opt,name=norm_pos_x,json=normPosX,proto3" json:"norm_pos_x,omitempty"`
	NormPosY             float32              `protobuf:"fixed32,5,opt,name=norm_pos_y,json=normPosY,proto3" json:"norm_pos_y,omitempty"`
	PupilDiameter        int32                `protobuf:"varint,6,opt,name=pupil_diameter,json=pupilDiameter,proto3" json:"pupil_diameter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DataPoint) Reset()         { *m = DataPoint{} }
func (m *DataPoint) String() string { return proto.CompactTextString(m) }
func (*DataPoint) ProtoMessage()    {}
func (*DataPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac8e6d38f431921d, []int{0}
}

func (m *DataPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPoint.Unmarshal(m, b)
}
func (m *DataPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPoint.Marshal(b, m, deterministic)
}
func (m *DataPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPoint.Merge(m, src)
}
func (m *DataPoint) XXX_Size() int {
	return xxx_messageInfo_DataPoint.Size(m)
}
func (m *DataPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPoint.DiscardUnknown(m)
}

var xxx_messageInfo_DataPoint proto.InternalMessageInfo

func (m *DataPoint) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *DataPoint) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DataPoint) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *DataPoint) GetNormPosX() float32 {
	if m != nil {
		return m.NormPosX
	}
	return 0
}

func (m *DataPoint) GetNormPosY() float32 {
	if m != nil {
		return m.NormPosY
	}
	return 0
}

func (m *DataPoint) GetPupilDiameter() int32 {
	if m != nil {
		return m.PupilDiameter
	}
	return 0
}

func init() {
	proto.RegisterType((*DataPoint)(nil), "DataPoint")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	Process(ctx context.Context, opts ...grpc.CallOption) (Agent_ProcessClient, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) Process(ctx context.Context, opts ...grpc.CallOption) (Agent_ProcessClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[0], "/Agent/Process", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentProcessClient{stream}
	return x, nil
}

type Agent_ProcessClient interface {
	Send(*DataPoint) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type agentProcessClient struct {
	grpc.ClientStream
}

func (x *agentProcessClient) Send(m *DataPoint) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentProcessClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	Process(Agent_ProcessServer) error
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_Process_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).Process(&agentProcessServer{stream})
}

type Agent_ProcessServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*DataPoint, error)
	grpc.ServerStream
}

type agentProcessServer struct {
	grpc.ServerStream
}

func (x *agentProcessServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentProcessServer) Recv() (*DataPoint, error) {
	m := new(DataPoint)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Agent",
	HandlerType: (*AgentServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Process",
			Handler:       _Agent_Process_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/data.proto",
}

func init() { proto.RegisterFile("proto/data.proto", fileDescriptor_ac8e6d38f431921d) }

var fileDescriptor_ac8e6d38f431921d = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4b, 0xfb, 0x30,
	0x14, 0xc7, 0x49, 0x7f, 0xbf, 0x6e, 0xee, 0x89, 0x43, 0x72, 0x90, 0x50, 0x45, 0x8b, 0x20, 0xf4,
	0x94, 0xc2, 0xbc, 0xec, 0xaa, 0xcc, 0x7b, 0x29, 0x1e, 0xd4, 0x4b, 0x89, 0x4d, 0x56, 0x02, 0x4b,
	0x5e, 0x68, 0x32, 0x70, 0xff, 0xa9, 0x7f, 0x8e, 0x2c, 0xdd, 0xa6, 0xd3, 0x53, 0x92, 0xcf, 0xe7,
	0xcb, 0x0b, 0xdf, 0x07, 0xe7, 0xae, 0xc7, 0x80, 0xa5, 0x14, 0x41, 0xf0, 0x78, 0xcd, 0x2e, 0x3b,
	0xc4, 0x6e, 0xa5, 0xca, 0xf8, 0x7a, 0x5f, 0x2f, 0x4b, 0x65, 0x5c, 0xd8, 0xec, 0xe4, 0xcd, 0x6f,
	0x19, 0xb4, 0x51, 0x3e, 0x08, 0xe3, 0x86, 0xc0, 0xed, 0x27, 0x81, 0xc9, 0x42, 0x04, 0x51, 0xa1,
	0xb6, 0x81, 0xce, 0x61, 0x72, 0x08, 0x30, 0x92, 0x93, 0xe2, 0x74, 0x96, 0xf1, 0x61, 0x04, 0xdf,
	0x8f, 0xe0, 0xcf, 0xfb, 0x44, 0xfd, 0x1d, 0xa6, 0x53, 0x48, 0xb4, 0x64, 0x49, 0x4e, 0x8a, 0xb4,
	0x4e, 0xb4, 0xa4, 0xd7, 0x00, 0x2d, 0xda, 0xa5, 0x96, 0xca, 0xb6, 0x8a, 0xfd, 0xcb, 0x49, 0x91,
	0xd4, 0x3f, 0x08, 0xbd, 0x02, 0xb0, 0xd8, 0x9b, 0xc6, 0xa1, 0x6f, 0x3e, 0xd8, 0xff, 0xe8, 0x4f,
	0xb6, 0xa4, 0x42, 0xff, 0x72, 0x64, 0x37, 0x2c, 0x3d, 0xb2, 0xaf, 0xf4, 0x0e, 0xa6, 0x6e, 0xed,
	0xf4, 0xaa, 0x91, 0x5a, 0x18, 0x15, 0x54, 0xcf, 0x46, 0xf1, 0xdf, 0xb3, 0x48, 0x17, 0x3b, 0x38,
	0x9b, 0x43, 0xfa, 0xd0, 0x29, 0x1b, 0x68, 0x09, 0xe3, 0xaa, 0xc7, 0x56, 0x79, 0x4f, 0x81, 0x1f,
	0xca, 0x66, 0x17, 0x7f, 0x9a, 0x3d, 0x6d, 0x37, 0x57, 0x90, 0xc7, 0xf1, 0x5b, 0x3a, 0xb0, 0x51,
	0x3c, 0xee, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x78, 0xe9, 0xa1, 0xe0, 0x76, 0x01, 0x00, 0x00,
}
